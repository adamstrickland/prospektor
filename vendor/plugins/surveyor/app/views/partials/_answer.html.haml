- renderer = answer.renderer(question)
- response_group ||= nil
- hide_label ||= false
- disabled ||= false
- fields_for_response(response_obj, response_group) do |response_form|
  - case renderer
  - when :any_answer
    = response_form.survey_check_box(:selected, :class => (answer.is_exclusive? ? "exclusive" : ""))
    = response_form.label("selected", answer.text) unless hide_label # This is a temp fix til I figure out why the id of the checkbox is all jacked up
  - when :any_other_and_string
    = response_form.survey_check_box(:selected, :class => (answer.is_exclusive? ? "exclusive" : ""))
    %label Other
    = response_form.text_field(:other_value)
    = response_form.text_field(:string_value)
  - when :any_string
    = response_form.survey_check_box(:selected, :class => (answer.is_exclusive? ? "exclusive" : ""))
    = response_form.label(:answer_id, answer.text)
    = response_form.text_field(:string_value, :size => 25, :maxlength => 250)
  - when :one_answer, :one_string
    - fields_for_radio(response_obj) do |radio_form|
      = radio_form.radio_button(:answer_id, answer.id, :checked => response_obj.selected?, :title => answer.text)
      = radio_form.label("answer_id_#{answer.id}", answer.text, :class => (hide_label ? "hidden" : ""))
    - if renderer == :one_string
      = response_form.text_field(:string_value, :size => 25, :maxlength => 250, :autocomplete => "off")
  - when :none_date
    = response_form.label(:string_value, split_text(answer.text)[:prefix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
    = response_form.text_field(:datetime_value)
    = response_form.label(:string_value, split_text(answer.text)[:postfix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
  - when :none_datetime
    = response_form.label(:string_value, split_text(answer.text)[:prefix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
    = response_form.datetime_select(:datetime_value, {:include_blank => true})
    = response_form.label(:string_value, split_text(answer.text)[:postfix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
  - when :none_float
    = response_form.label(:float_value, split_text(answer.text)[:prefix]) unless hide_label
    = response_form.text_field(:float_value, :size => 5, :maxlength => 10, :autocomplete => "off")
    = response_form.label(:float_value, split_text(answer.text)[:postfix]) unless hide_label
  - when :none_integer
    = response_form.label(:integer_value, split_text(answer.text)[:prefix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
    = response_form.text_field(:integer_value, :size => 5, :maxlength => 10, :autocomplete => "off", :disabled => disabled)
    = response_form.label(:integer_value, split_text(answer.text)[:postfix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
  - when :none_string
    = response_form.label(:string_value, split_text(answer.text)[:prefix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
    = response_form.text_field(:string_value, :size => 25, :maxlength => 250, :autocomplete => "off", :disabled => disabled)
    = response_form.label(:string_value, split_text(answer.text)[:postfix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
  - when :none_text
    = response_form.label(:text_value, split_text(answer.text)[:prefix]) unless hide_label
    = response_form.text_area(:text_value, :cols => 80, :rows => 10)
    = response_form.label(:text_value, split_text(answer.text)[:postfix]) unless hide_label
  - when :none_time
    = response_form.label(:string_value, split_text(answer.text)[:prefix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
    = response_form.time_select(:datetime_value,{ :include_blank => true })
    = response_form.label(:string_value, split_text(answer.text)[:postfix], :class => "#{(disabled)? 'disabled' : 'enabled'}") unless hide_label
  - else
    = answer.text
  
